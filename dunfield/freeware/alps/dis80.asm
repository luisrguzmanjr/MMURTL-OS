*
* 8080 DISASSEMBLER.
*
* NOTE: This program is NOT ROMable
*
* North-Star DOS entry points
CTRLC	EQU	$2016	Test for char (return in A), ZF=CTRL-C detected
DOSIN	EQU	$2010	Read a character from device(A) into A
DOSOUT	EQU	$200D	Write character in B to device(A)
DOS	EQU	$2028	Entry point to return to DOS
*
START	LXI	H,STMSG
	CALL	PMSG
REST	LXI	SP,ADTAB-2
DISASM	LXI	H,SMSG
PZZZ	CALL	PMSG
PRNT	CALL	INPT
	CPI	'Q'
	JZ	DOS
	CPI	'D'
	JZ	GODIS
	CPI	'F'
	JZ	FILE
	CPI	'M'
	JZ	MEMRY
ERROR	LXI	H,ERR
	CALL	PMSG
	JMP	DISASM
PMSG	MOV	A,M
	CPI	'!'
	RZ
	MOV	B,A
	CALL	DOUT
	INX	H
	JMP	PMSG
* Get hex operands for commands
CALC	LXI	H,0
	MOV	C,H
CLP0	INX	D
	LDAX	D
	CPI	' '
	JZ	CLP0
CAL1	LDAX	D
	CALL	VALHEX
	JC	BAD
	DAD	H
	DAD	H
	DAD	H
	DAD	H
	SUI	$30
	CPI	$0A
	JC	COK
	SUI	7
COK	MOV	B,A
	MOV	A,L
	ANI	$F0
	ORA	B
	MOV	L,A
	INX	D
	MVI	C,7
	JMP	CAL1
BAD	MOV	A,C
	ANA	A
	STC
	RZ
	LDAX	D
	CPI	' '
	RZ
	CPI	$0D
	RZ
	STC
	RET
* Test a character for validity as a HEX digit (CY=0 if OK)
VALHEX	CPI	'0'
	RC
	CPI	'G'
	CMC
	RC
	CPI	$3A
	CMC
	RNC
	CPI	'A'
	RET
SMSG	STR	'DIS: !'
STMSG	DW	$0A0A
	STR	'        '
	STR	'DIS: SYSTEM '
	STR	'DISASSEMBLER'
	DB	$0A
	DW	$0A0D
	DB	7
	DB	'!'
ERR	STR	'**ERROR**'
	DB	7
	DW	$0D0A
	DB	'!'
* Accept an input line from the console
INPT	LXI	H,ADTAB
ILP	CALL	IN
	CPI	$5F
	JNZ	SKIP1
	MVI	A,8
SKIP1	DCX	H
	MOV	B,A
	CALL	DOUT
	CPI	8
	JZ	ILP
	INX	H
	MOV	M,A
	CPI	$0D
	INX	H
	JNZ	ILP
	MOV	M,A
	MVI	B,10
	CALL	DOUT
	LXI	D,ADTAB
	LDAX	D
	RET
* Write a space to the console
SPACE	MVI	B,' '
	JMP	DOUT
* Display value of A in HEX
HPR	PUSH	PSW
	RRC
	RRC
	RRC
	RRC
	CALL	HOUT
	POP	PSW
HOUT	ANI	$0F
	ADI	$30
	CPI	$3A
	JC	HOK
	ADI	7
HOK	MOV	B,A
	JMP	DOUT
* Do a disassembly to the console
GODIS	CALL	CALC
	JC	ERROR
	PUSH	H
	CALL	CALC
	MOV	A,L
	STA	DOUT+1
	POP	D
VLOOP	PUSH	D
	MOV	A,D
	CALL	HPR
	MOV	A,E
	CALL	HPR
	CALL	SPACE
	CALL	LOOK
	ANI	$0F
	PUSH	PSW
	PUSH	H
	MVI	B,4
	MOV	C,A
	DCX	D
VLP1	INX	D
	PUSH	B
	LDAX	D
	CALL	HPR
	CALL	SPACE
	POP	B
	DCR	B
	DCR	C
	JNZ	VLP1
VLP2	PUSH	B
	CALL	SPACE
	CALL	SPACE
	CALL	SPACE
	POP	B
	DCR	B
	JNZ	VLP2
	POP	B
	POP	PSW
	POP	D
	PUSH	D
	PUSH	PSW
	PUSH	B
	MVI	H,8
	ANI	$0F
	MOV	C,A
PCHR	LDAX	D
	INX	D
	CPI	$7F
	JC	PROK
	MVI	A,' '
PROK	CPI	' '
	JNC	LESS
	MVI	A,' '
LESS	MOV	B,A
	CALL	DOUT
	DCR	H
	DCR	C
	JNZ	PCHR
SPLP	CALL	SPACE
	DCR	H
	JNZ	SPLP
	POP	B
	MVI	D,6
VLP3	LDAX	B
	CPI	$DD
	JZ	VOUT1
	PUSH	B
	MOV	B,A
	CALL	DOUT
	POP	B
	INX	B
	DCR	D
	CPI	' '
	JNZ	VLP3
VOUT	DCR	D
	JZ	VLP3
	PUSH	B
	CALL	SPACE
	POP	B
	JMP	VOUT
VOUT1	POP	PSW
	POP	D
	DCR	A
	JNZ	T2
VEXT	MVI	B,$0A
	CALL	DOUT
	MVI	B,$0D
	CALL	DOUT
	INX	D
	LDA	FLAG
	ANA	A
	JNZ	INLP1
	CALL	CTRLC
	JZ	CAN
	CPI	$A
	JNZ	VLOOP
	MVI	A,$FF
	STA	FLAG
INLP1	CALL	IN
	CPI	$0A
	JZ	VLOOP
	CPI	$0D
	JZ	CR
	CPI	3
	JZ	CAN
	JMP	INLP1
CR	SUB	A
	STA	FLAG
	JMP	VLOOP
CAN	SUB	A
	STA	FLAG
	STA	DOUT+1
	JMP	DISASM
T2	PUSH	PSW
	MVI	B,'$'
	CALL	DOUT
	POP	PSW
	DCR	A
	JNZ	T3
	INX	D
	LDAX	D
	CALL	HPR
	JMP	VEXT
T3	INX	D
	INX	D
	LDAX	D
	CALL	HPR
	DCX	D
	LDAX	D
	CALL	HPR
	INX	D
	JMP	VEXT
* Write character in B to console
DOUT	MVI	A,0		Use MVI so we can patch device number
	JMP	DOSOUT
* Get a character from console into A
IN	SUB	A
	JMP	DOSIN
* Perform a memory display
MEMRY	CALL	CALC
	JC	ERROR
	MVI	C,0
ALOOP	MOV	A,H
	CALL	HPR
	MOV	A,L
	CALL	HPR
	CALL	SPACE
	CALL	SPACE
	MVI	D,16
	PUSH	H
ALP1	MOV	A,M
	CALL	HPR
	CALL	SPACE
	MOV	A,D
	CPI	9
	CZ	SPACE
	MOV	A,D
	ANI	7
	CPI	5
	CZ	SPACE
	INX	H
	DCR	D
	JNZ	ALP1
	MVI	D,4
AL2	CALL	SPACE
	DCR	D
	JNZ	AL2
	MVI	B,'*'
	CALL	DOUT
	POP	H
	MVI	D,16
AL3	MOV	A,M
	CPI	' '
	JC	BLANK
	CPI	$7F
	JNC	BLANK
	MOV	B,A
	CALL	DOUT
RETU	INX	H
	DCR	D
	JNZ	AL3
	MVI	B,'*'
	CALL	DOUT
	MVI	B,$0A
	CALL	DOUT
	MVI	B,$0D
	CALL	DOUT
	MOV	A,C
	ANA	A
	JNZ	WAIT
	CALL	CTRLC
	JZ	REST
	CPI	$0A
	JNZ	ALOOP
WAIT	MVI	C,255
	CALL	IN
	CPI	$0A
	JZ	ALOOP
	MVI	C,0
	CPI	3
	JZ	REST
	CPI	$0D
	JNZ	WAIT
	JMP	ALOOP
BLANK	MVI	B,'.'
	CALL	DOUT
	JMP	RETU
FLAG	DB	0
* Create disassembly file in memory
FILE	LXI	H,0
	SHLD	OFFSET
	CALL	CALC
	SHLD	SADR
	JC	ERROR
	CALL	CALC
	JC	ERROR
	SHLD	EADR
	CALL	CALC
	JC	DIS1
	XCHG
	LHLD	SADR
	MOV	A,E
	SUB	L
	MOV	L,A
	MOV	A,D
	SBB	H
	MOV	H,A
	SHLD	OFFSET
DIS1	EQU	*
DIS	LHLD	SADR
	XCHG
ZERO	LXI	H,ADTAB
	MVI	A,=ADTAB+$200
ZLOOP	MVI	M,0
	INX	H
	CMP	H
	JNZ	ZLOOP
BUILD	LXI	B,ADTAB
TLB	PUSH	B
	CALL	LOOK
	POP	B
	ANI	$0F
	CPI	3
	JNZ	LSKP
	PUSH	D
	XCHG
	INX	H
	MOV	E,M
	INX	H
	MOV	D,M
	CALL	TLOOK
	JNC	TSKP
	MOV	A,D
	STAX	B
	MOV	A,E
	INX	B
	STAX	B
	INX	B
TSKP	MVI	A,3
	POP	D
LSKP	INX	D
	DCR	A
	JNZ	LSKP
	CALL	CMPADR
	JC	TLB
END1	LHLD	SADR
	XCHG
	LXI	H,$4000
TLP	PUSH	D
	PUSH	H
	LHLD	OFFSET
	DAD	D
	XCHG
	CALL	TLOOK
	MOV	B,H
	MOV	C,L
	POP	H
	JC	TSKIP
	DCX	B
	SUB	A
	STAX	B
	DCX	B
	STAX	B
	MVI	M,'H'
	CALL	VALD
TSKIP	POP	D
	MVI	M,' '
	INX	H
	PUSH	H
	CALL	LOOK
	POP	B
	PUSH	PSW
TLP2	MOV	A,M
	CPI	$DD
	JZ	TFIN
	STAX	B
	INX	B
	INX	H
	JMP	TLP2
TFIN	POP	PSW
	MOV	H,B
	MOV	L,C
	CPI	$41
	JZ	DB
	DCR	A
	JZ	EOT
	DCR	A
	JZ	TYP2
	MVI	M,'H'
	CALL	SAVE2
	INX	H
EOT	MVI	M,$0D
	INX	H
	INX	D
	PUSH	H
	CALL	CMPADR
	POP	H
	JC	TLP
END2	LXI	B,ADTAB
TLOOP	MOV	A,B
	CPI	=ADTAB+$200
	JZ	ALLDON
	LDAX	B
	INX	B
	MOV	D,A
	LDAX	B
	MOV	E,A
	INX	B
	ORA	D
	JZ	TLOOP
	MVI	M,'H'
	CALL	VALD
	MVI	M,' '
	INX	H
	MVI	M,'E'
	INX	H
	MVI	M,'Q'
	INX	H
	MVI	M,'U'
	INX	H
	MVI	M,' '
	INX	H
	MVI	M,'$'
	CALL	VALD
	MVI	M,$0D
	INX	H
	JMP	TLOOP
CMPADR	LHLD	EADR
	MOV	A,D
	CMP	H
	RC
	MOV	A,E
	CMP	L
	RET
ALLDON	MVI	M,$FF
	JMP	$2A06
DB	DCX	D
TYP2	MVI	M,'$'
	CALL	SAVE1
	INX	H
	JMP	EOT
LOOK	LDAX	D
	MOV	B,A
	LXI	H,TABLE
LOOK1	MVI	A,$DD
L2	CMP	M
	INX	H
	JNZ	L2
	MOV	A,M
	CPI	$DD
	JZ	TMOV
	CMP	B
	JNZ	LOOK1
	INX	H
	MOV	A,M
	INX	H
	RET
TMOV	MOV	A,B
	ANI	$C0
	CPI	$40
	JNZ	TMVI
	CALL	GETB
	STA	SOURCE
	MOV	A,B
	RRC
	RRC
	RRC
	CALL	GETREG
	STA	DEST
	LXI	H,MOVIN
	MVI	A,1
	RET
RTAB	STR	'BCDEHLMA'
MOVIN	STR	'MOV '
DEST	DB	0
	DB	','
SOURCE	DB	0
	DB	$DD
TMVI	MOV	A,B
	ANI	$C7
	CPI	6
	JNZ	TSUB
	MOV	A,B
	RRC
	RRC
	RRC
	CALL	GETREG
	STA	MDST
	LXI	H,MVIIN
	MVI	A,2
	RET
MVIIN	STR	'MVI '
MDST	DB	0
	DB	','
	DB	$DD
GETB	MOV	A,B
GETREG	LXI	H,RTAB
	ANI	7
	ADD	L
	MOV	L,A
	MOV	A,M
	RET
TSUB	MOV	A,B
	ANI	$F8
	CPI	$90
	JNZ	TSBB
	CALL	GETB
	STA	SDDS
	LXI	H,SUBIN
	MVI	A,1
	RET
SUBIN	STR	'SUB '
SDDS	DW	$DD00
TSBB	CPI	$98
	JNZ	TADD
	CALL	GETB
	STA	SBBS
	LXI	H,SBBIN
	MVI	A,1
	RET
SBBIN	STR	'SBB '
SBBS	DW	$DD00
TADD	CPI	$80
	JNZ	TADC
	CALL	GETB
	STA	ADDS
	LXI	H,ADDIN
	MVI	A,1
	RET
ADDIN	STR	'ADD '
ADDS	DW	$DD00
TADC	CPI	$88
	JNZ	TANA
	CALL	GETB
	STA	ADCS
	LXI	H,ADCIN
	MVI	A,1
	RET
ADCIN	STR	'ADC '
ADCS	DW	$DD00
TANA	CPI	$A0
	JNZ	TORA
	CALL	GETB
	STA	ANAS
	LXI	H,ANAIN
	MVI	A,1
	RET
ANAIN	STR	'ANA '
ANAS	DW	$DD00
TORA	CPI	$B0
	JNZ	TXRA
	CALL	GETB
	STA	ORAS
	LXI	H,ORAIN
	MVI	A,1
	RET
ORAIN	STR	'ORA '
ORAS	DW	$DD00
TXRA	CPI	$A8
	JNZ	TCMP
	CALL	GETB
	STA	XRAS
	LXI	H,XRAIN
	MVI	A,1
	RET
XRAIN	STR	'XRA '
XRAS	DW	$DD00
TCMP	CPI	$B8
	JNZ	TINR
	CALL	GETB
	STA	CMPS
	LXI	H,CMPIN
	MVI	A,1
	RET
CMPIN	STR	'CMP '
CMPS	DW	$DD00
TINR	MOV	A,B
	ANI	$C7
	CPI	4
	JNZ	TDCR
	MOV	A,B
	RRC
	RRC
	RRC
	CALL	GETREG
	STA	INRDS
	LXI	H,INRIN
	MVI	A,1
	RET
INRIN	STR	'INR '
INRDS	DW	$DD00
TDCR	CPI	$05
	JNZ	NF
	MOV	A,B
	RRC
	RRC
	RRC
	CALL	GETREG
	STA	DCRDS
	LXI	H,DCRIN
	MVI	A,1
	RET
DCRIN	STR	'DCR '
DCRDS	DW	$DD00
NF	MVI	A,$41
	LXI	H,DBOP
	RET
DBOP	STR	'DB '
	DB	$DD
TLOOK	LXI	H,ADTAB
TL1	MOV	A,D
	CMP	M
	INX	H
	JZ	CHK
	INX	H
	MOV	A,H
	CPI	=ADTAB+$200
	JC	TL1
	STC
	RET
CHK	MOV	A,E
	CMP	M
	INX	H
	JNZ	TL1
	RET
SAVE2	INX	D
	CALL	SAVE1
	DCX	D
	DCX	D
	CALL	SAVE1
	INX	D
	RET
SAVE1	INX	D
	LDAX	D
	PUSH	PSW
	RRC
	RRC
	RRC
	RRC
	CALL	SOUT
	POP	PSW
SOUT	ANI	$0F
	ORI	$30
	CPI	$3A
	JC	SOK
	ADI	7
SOK	INX	H
	MOV	M,A
	RET
VALD	PUSH	D
	PUSH	H
	XCHG
	SHLD	TBUFF
	POP	H
	LXI	D,TBUFF-1
	CALL	SAVE2
	POP	D
	INX	H
	RET
SADR	DW	0
EADR	DW	0
OFFSET	DW	0
TBUFF	DW	0
TABLE	DB	$DD
	DW	$0100
	STR	'NOP'
	DB	$DD
	DW	$03C3
	STR	'JMP '
	DB	$DD
	DW	$03FA
	STR	'JM '
	DB	$DD
	DW	$03F2
	STR	'JP '
	DB	$DD
	DW	$03E2
	STR	'JPO '
	DB	$DD
	DW	$03EA
	STR	'JPE '
	DB	$DD
	DW	$02FE
	STR	'CPI '
	DB	$DD
	DW	$0321
	STR	'LXI H,'
	DB	$DD
	DW	$0311
	STR	'LXI D,'
	DB	$DD
	DW	$0301
	STR	'LXI B,'
	DB	$DD
	DW	$0331
	STR	'LXI S,'
	DB	$DD
	DW	$033A
	STR	'LDA '
	DB	$DD
	DW	$0332
	STR	'STA '
	DB	$DD
	DW	$0322
	STR	'SHLD '
	DB	$DD
	DW	$032A
	STR	'LHLD '
	DB	$DD
	DW	$03C2
	STR	'JNZ '
	DB	$DD
	DW	$03CA
	STR	'JZ '
	DB	$DD
	DW	$03DA
	STR	'JC '
	DB	$DD
	DW	$03D2
	STR	'JNC '
	DB	$DD
	DW	$01C9
	STR	'RET'
	DB	$DD
	DW	$01D8
	STR	'RC'
	DB	$DD
	DW	$01F8
	STR	'RM'
	DB	$DD
	DW	$01D0
	STR	'RNC'
	DB	$DD
	DW	$01C0
	STR	'RNZ'
	DB	$DD
	DW	$01F0
	STR	'RP'
	DB	$DD
	DW	$01E8
	STR	'RPE'
	DB	$DD
	DW	$01E0
	STR	'RPO'
	DB	$DD
	DW	$01C8
	STR	'RZ'
	DB	$DD
	DW	$03CD
	STR	'CALL '
	DB	$DD
	DW	$03CC
	STR	'CZ '
	DB	$DD
	DW	$03C4
	STR	'CNZ '
	DB	$DD
	DW	$03F4
	STR	'CP '
	DB	$DD
	DW	$03FC
	STR	'CM '
	DB	$DD
	DW	$03DC
	STR	'CC '
	DB	$DD
	DW	$03D4
	STR	'CNC '
	DB	$DD
	DW	$03EC
	STR	'CPE '
	DB	$DD
	DW	$03E4
	STR	'CPO '
	DB	$DD
	DW	$0109
	STR	'DAD B'
	DB	$DD
	DW	$0119
	STR	'DAD D'
	DB	$DD
	DW	$0129
	STR	'DAD H'
	DB	$DD
	DW	$0139
	STR	'DAD SP'
	DB	$DD
	DW	$01F5
	STR	'PUSH PSW'
	DB	$DD
	DW	$01C5
	STR	'PUSH B'
	DB	$DD
	DW	$01D5
	STR	'PUSH D'
	DB	$DD
	DW	$01E5
	STR	'PUSH H'
	DB	$DD
	DW	$01F1
	STR	'POP PSW'
	DB	$DD
	DW	$01C1
	STR	'POP B'
	DB	$DD
	DW	$01D1
	STR	'POP D'
	DB	$DD
	DW	$01E1
	STR	'POP H'
	DB	$DD
	DW	$0103
	STR	'INX B'
	DB	$DD
	DW	$0113
	STR	'INX D'
	DB	$DD
	DW	$0123
	STR	'INX H'
	DB	$DD
	DW	$0133
	STR	'INX SP'
	DB	$DD
	DW	$010B
	STR	'DCX B'
	DB	$DD
	DW	$011B
	STR	'DCX D'
	DB	$DD
	DW	$012B
	STR	'DCX H'
	DB	$DD
	DW	$013B
	STR	'DCX SP'
	DB	$DD
	DW	$0127
	STR	'DAA'
	DB	$DD
	DW	$0176
	STR	'HLT'
	DB	$DD
	DW	$01FB
	STR	'EI'
	DB	$DD
	DW	$01F3
	STR	'DI'
	DB	$DD
	DW	$0137
	STR	'STC'
	DB	$DD
	DW	$013F
	STR	'CMC'
	DB	$DD
	DW	$01EB
	STR	'XCHG'
	DB	$DD
	DW	$01E3
	STR	'XTHL'
	DB	$DD
	DW	$01F9
	STR	'SPHL'
	DB	$DD
	DW	$01E9
	STR	'PCHL'
	DB	$DD
	DW	$02DB
	STR	'IN '
	DB	$DD
	DW	$02D3
	STR	'OUT '
	DB	$DD
	DW	$0107
	STR	'RLC'
	DB	$DD
	DW	$0117
	STR	'RAL'
	DB	$DD
	DW	$011F
	STR	'RAR'
	DB	$DD
	DW	$010F
	STR	'RRC'
	DB	$DD
	DW	$02CE
	STR	'ACI '
	DB	$DD
	DW	$02C6
	STR	'ADI '
	DB	$DD
	DW	$02E6
	STR	'ANI '
	DB	$DD
	DW	$02F6
	STR	'ORI '
	DB	$DD
	DW	$02EE
	STR	'XRI '
	DB	$DD
	DW	$02D6
	STR	'SUI '
	DB	$DD
	DW	$02DE
	STR	'SBI '
	DB	$DD
	DW	$010A
	STR	'LDAX B'
	DB	$DD
	DW	$011A
	STR	'LDAX D'
	DB	$DD
	DW	$0102
	STR	'STAX B'
	DB	$DD
	DW	$0112
	STR	'STAX D'
	DB	$DD
	DW	$012F
	STR	'CMA'
	DW	$DDDD
ENDIT	EQU	*
ADTAB	EQU	$3200
