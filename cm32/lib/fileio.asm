
.DATA
EXTRN _CreateFile FWORD
EXTRN _CreateDir FWORD
EXTRN _DeleteDir FWORD
EXTRN _OpenFile FWORD
EXTRN _RenameFile FWORD
EXTRN _GetFileSize FWORD
EXTRN _SetFileSize FWORD
EXTRN _ReadBlock FWORD
EXTRN _WriteBlock FWORD
EXTRN _ReadBytes FWORD
EXTRN _WriteBytes FWORD
EXTRN _GetFileLFA FWORD
EXTRN _SetFileLFA FWORD
EXTRN _CloseFile FWORD
EXTRN _DeleteFile FWORD
EXTRN _GetDirSector FWORD
_error_num DD 0


.CODE
EXTRN _strcpy: NEAR
EXTRN _strncpy: NEAR
EXTRN _strcat: NEAR
EXTRN _strncat: NEAR
EXTRN _strcmp: NEAR
EXTRN _strncmp: NEAR
EXTRN _strlen: NEAR
EXTRN _strchr: NEAR
EXTRN _fopen: NEAR
EXTRN _fclose: NEAR
EXTRN _remove: NEAR
EXTRN _rename: NEAR
EXTRN _fgetc: NEAR
EXTRN _fgets: NEAR
EXTRN _fputs: NEAR
EXTRN _fputc: NEAR
EXTRN _printf: NEAR
EXTRN _sprintf: NEAR
EXTRN _fprintf: NEAR
EXTRN _ftell: NEAR
EXTRN _rewind: NEAR
EXTRN _fseek: NEAR
EXTRN _fread: NEAR
EXTRN _fwrite: NEAR
PUBLIC _fopen:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,24
	XOR EAX,EAX
	MOV DWORD PTR [EBP-20],EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-4],EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-24],EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-12],EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-16],EAX
	MOV ESI,DWORD PTR [EBP+8]
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,114
	SETE AL
	AND AL,AL
	JZ L_1
	XOR EAX,EAX
	MOV DWORD PTR [EBP-8],EAX
	JMP L_2
L_1:
	MOV ESI,DWORD PTR [EBP+8]
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,119
	SETE AL
	AND AL,AL
	JZ L_3
	MOV EAX,1
	MOV DWORD PTR [EBP-8],EAX
	MOV EAX,1
	MOV DWORD PTR [EBP-12],EAX
	MOV EAX,1
	MOV DWORD PTR [EBP-16],EAX
	JMP L_4
L_3:
	MOV ESI,DWORD PTR [EBP+8]
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,97
	SETE AL
	AND AL,AL
	JZ L_5
	MOV EAX,1
	MOV DWORD PTR [EBP-24],EAX
	MOV EAX,1
	MOV DWORD PTR [EBP-12],EAX
	MOV EAX,1
	MOV DWORD PTR [EBP-8],EAX
	JMP L_6
L_5:
	XOR EAX,EAX
	JMP L_7
L_6:
L_4:
L_2:
	MOV EAX,1
	MOV ESI,DWORD PTR [EBP+8]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,43
	SETE AL
	AND AL,AL
	JNZ L_8
	MOV EAX,2
	MOV ESI,DWORD PTR [EBP+8]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,43
	SETE AL
	AND AL,AL
L_8:
	JZ L_9
	MOV EAX,1
	MOV DWORD PTR [EBP-8],EAX
L_9:
	MOV EAX,[EBP-12]
	AND EAX,EAX
	JZ L_10
	PUSH DWORD PTR [EBP+12]
	PUSH DWORD PTR [EBP+12]
	CALL _strlen
	PUSH EAX
	PUSH 32
	CALL FWORD PTR _CreateFile
	MOV DWORD PTR [EBP-20],EAX
L_10:
	MOV EAX,[EBP-20]
	CMP EAX,226
	SETE AL
	AND AL,AL
	JZ L_11
	XOR EAX,EAX
	MOV DWORD PTR [EBP-20],EAX
L_11:
	MOV EAX,[EBP-20]
	AND EAX,EAX
	JNZ L_12
	PUSH DWORD PTR [EBP+12]
	PUSH DWORD PTR [EBP+12]
	CALL _strlen
	PUSH EAX
	PUSH DWORD PTR [EBP-8]
	PUSH 1
	LEA EAX,DWORD PTR [EBP-4]
	PUSH EAX
	CALL FWORD PTR _OpenFile
	MOV DWORD PTR [EBP-20],EAX
L_12:
	MOV EAX,[EBP-20]
	AND EAX,EAX
	JZ L_13
	MOV EAX,[EBP-20]
	MOV _error_num,EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-4],EAX
L_13:
	MOV EAX,[EBP-20]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_14
	MOV EAX,[EBP-24]
L_14:
	AND EAX,EAX
	JZ L_15
	PUSH DWORD PTR [EBP-4]
	PUSH -1
	CALL FWORD PTR _SetFileLFA
	MOV DWORD PTR [EBP-20],EAX
L_15:
	MOV EAX,[EBP-20]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_16
	MOV EAX,[EBP-16]
L_16:
	AND EAX,EAX
	JZ L_17
	PUSH DWORD PTR [EBP-4]
	XOR EAX,EAX
	PUSH EAX
	CALL FWORD PTR _SetFileSize
	MOV DWORD PTR [EBP-20],EAX
L_17:
	MOV EAX,[EBP-4]
L_7:
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _rename:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,4
	PUSH DWORD PTR [EBP+12]
	PUSH DWORD PTR [EBP+12]
	CALL _strlen
	PUSH EAX
	PUSH DWORD PTR [EBP+8]
	PUSH DWORD PTR [EBP+8]
	CALL _strlen
	PUSH EAX
	CALL FWORD PTR _RenameFile
	MOV DWORD PTR [EBP-4],EAX
	MOV EAX,[EBP-4]
	AND EAX,EAX
	JZ L_18
	MOV EAX,[EBP-4]
	MOV _error_num,EAX
	MOV EAX,-1
	JMP L_19
L_18:
	XOR EAX,EAX
L_19:
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _remove:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,8
	PUSH DWORD PTR [EBP+8]
	PUSH DWORD PTR [EBP+8]
	CALL _strlen
	PUSH EAX
	PUSH 1
	XOR EAX,EAX
	PUSH EAX
	LEA EAX,DWORD PTR [EBP-4]
	PUSH EAX
	CALL FWORD PTR _OpenFile
	MOV DWORD PTR [EBP-8],EAX
	MOV EAX,[EBP-8]
	AND EAX,EAX
	JZ L_20
	MOV EAX,[EBP-8]
	MOV _error_num,EAX
	MOV EAX,-1
	JMP L_21
L_20:
	PUSH DWORD PTR [EBP-4]
	CALL FWORD PTR _DeleteFile
	MOV DWORD PTR [EBP-8],EAX
	MOV EAX,[EBP-8]
	AND EAX,EAX
	JZ L_22
	MOV EAX,[EBP-8]
	MOV _error_num,EAX
	PUSH DWORD PTR [EBP-4]
	CALL FWORD PTR _CloseFile
	MOV EAX,-1
	JMP L_21
L_22:
	XOR EAX,EAX
L_21:
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _fclose:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,8
	PUSH DWORD PTR [EBP+8]
	CALL FWORD PTR _CloseFile
	MOV DWORD PTR [EBP-4],EAX
	MOV EAX,[EBP-4]
	AND EAX,EAX
	JZ L_23
	MOV EAX,[EBP-4]
	MOV _error_num,EAX
	MOV EAX,-1
	MOV DWORD PTR [EBP-8],EAX
	JMP L_24
L_23:
	XOR EAX,EAX
	MOV DWORD PTR [EBP-8],EAX
L_24:
	MOV EAX,[EBP+8]
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _fgetc:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,13
	PUSH DWORD PTR [EBP+8]
	LEA EAX,BYTE PTR [EBP-13]
	PUSH EAX
	PUSH 1
	LEA EAX,DWORD PTR [EBP-8]
	PUSH EAX
	CALL FWORD PTR _ReadBytes
	MOV DWORD PTR [EBP-4],EAX
	MOV EAX,[EBP-4]
	AND EAX,EAX
	JZ L_26
	MOV EAX,[EBP-8]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_26:
	JZ L_27
	MOV EAX,-1
	JMP L_28
L_27:
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP-13]
	MOV DWORD PTR [EBP-12],EAX
L_29:
	MOV EAX,[EBP-12]
L_28:
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _fgets:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,9
	MOV EAX,[EBP+16]
	MOV DWORD PTR [EBP-8],EAX
L_30:
	MOV EAX,[EBP+12]
	CMP EAX,1
	SETG AL
	AND AL,AL
	JZ L_31
	PUSH DWORD PTR [EBP+8]
	CALL _fgetc
	MOV DWORD PTR [EBP-4],EAX
	MOV EAX,[EBP-4]
	CMP EAX,-1
	SETE AL
	AND AL,AL
	JZ L_32
	MOV ESI,DWORD PTR [EBP+16]
	XOR EAX,EAX
	MOV BYTE PTR [ESI],AL
	XOR EAX,EAX
	JMP L_33
L_32:
	MOV EAX,[EBP-4]
	MOV BYTE PTR [EBP-9],AL
	MOV ESI,DWORD PTR [EBP+16]
	MOVSX EAX,BYTE PTR [EBP-9]
	MOV BYTE PTR [ESI],AL
	MOV EAX,[EBP+12]
	DEC DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [EBP-9]
	CMP EAX,10
	SETE AL
	AND AL,AL
	JZ L_35
	XOR EAX,EAX
	MOV DWORD PTR [EBP+12],EAX
L_35:
	MOV ESI,DWORD PTR [EBP+16]
	INC DWORD PTR [EBP+16]
	MOV EAX,DWORD PTR [ESI]
L_34:
	JMP L_30
L_31:
	MOV ESI,DWORD PTR [EBP+16]
	XOR EAX,EAX
	MOV BYTE PTR [ESI],AL
	MOV EAX,[EBP-8]
L_33:
	MOV ESP,EBP
	POP EBP
	RETN 12
PUBLIC _fputc:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,12
	PUSH DWORD PTR [EBP+8]
	LEA EAX,DWORD PTR [EBP+12]
	PUSH EAX
	PUSH 1
	LEA EAX,DWORD PTR [EBP-8]
	PUSH EAX
	CALL FWORD PTR _WriteBytes
	MOV DWORD PTR [EBP-4],EAX
	MOV EAX,[EBP-4]
	AND EAX,EAX
	JZ L_36
	MOV EAX,-1
	MOV DWORD PTR [EBP-12],EAX
	JMP L_37
L_36:
	MOV EAX,[EBP+12]
	MOV DWORD PTR [EBP-12],EAX
L_37:
	MOV EAX,[EBP-12]
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _fputs:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,16
	XOR EAX,EAX
	MOV DWORD PTR [EBP-4],EAX
	PUSH DWORD PTR [EBP+12]
	CALL _strlen
	MOV DWORD PTR [EBP-8],EAX
	MOV EAX,[EBP-8]
	AND EAX,EAX
	JZ L_39
	PUSH DWORD PTR [EBP+8]
	PUSH DWORD PTR [EBP+12]
	PUSH DWORD PTR [EBP-8]
	LEA EAX,DWORD PTR [EBP-12]
	PUSH EAX
	CALL FWORD PTR _WriteBytes
	MOV DWORD PTR [EBP-4],EAX
L_39:
	MOV EAX,[EBP-4]
	AND EAX,EAX
	JZ L_40
	MOV EAX,-1
	MOV DWORD PTR [EBP-16],EAX
	JMP L_41
L_40:
	MOV EAX,1
	MOV DWORD PTR [EBP-16],EAX
L_41:
	MOV EAX,[EBP-16]
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _ftell:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,8
	PUSH DWORD PTR [EBP+8]
	LEA EAX,DWORD PTR [EBP-8]
	PUSH EAX
	CALL FWORD PTR _GetFileLFA
	MOV DWORD PTR [EBP-4],EAX
	MOV EAX,[EBP-4]
	AND EAX,EAX
	JZ L_43
	MOV EAX,-1
	MOV DWORD PTR [EBP-8],EAX
L_43:
	MOV EAX,[EBP-8]
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _rewind:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,4
	PUSH DWORD PTR [EBP+8]
	XOR EAX,EAX
	PUSH EAX
	CALL FWORD PTR _SetFileLFA
	MOV DWORD PTR [EBP-4],EAX
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _fseek:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,8
	MOV EAX,[EBP+8]
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_45
	PUSH DWORD PTR [EBP+16]
	LEA EAX,DWORD PTR [EBP-8]
	PUSH EAX
	CALL FWORD PTR _GetFileLFA
	MOV DWORD PTR [EBP-4],EAX
	JMP L_46
L_45:
	MOV EAX,[EBP+8]
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_47
	XOR EAX,EAX
	MOV DWORD PTR [EBP+12],EAX
	MOV EAX,-1
	MOV DWORD PTR [EBP-8],EAX
	JMP L_48
L_47:
	MOV EAX,[EBP+8]
	CMP EAX,0
	SETE AL
	AND AL,AL
	JZ L_49
	XOR EAX,EAX
	MOV DWORD PTR [EBP-8],EAX
	JMP L_50
L_49:
	MOV EAX,1
	JMP L_51
L_50:
L_48:
L_46:
	PUSH DWORD PTR [EBP+16]
	MOV EAX,[EBP+12]
	ADD EAX,DWORD PTR [EBP-8]
	PUSH EAX
	CALL FWORD PTR _SetFileLFA
	MOV DWORD PTR [EBP-4],EAX
	MOV EAX,[EBP-4]
	AND EAX,EAX
	JZ L_52
	MOV EAX,1
	JMP L_51
L_52:
	XOR EAX,EAX
L_53:
L_51:
	MOV ESP,EBP
	POP EBP
	RETN 12
PUBLIC _fread:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,12
	PUSH DWORD PTR [EBP+8]
	PUSH DWORD PTR [EBP+20]
	MOV EAX,[EBP+16]
	MOV ECX,[EBP+12]
	IMUL ECX
	PUSH EAX
	LEA EAX,DWORD PTR [EBP-8]
	PUSH EAX
	CALL FWORD PTR _ReadBytes
	MOV DWORD PTR [EBP-4],EAX
	MOV EAX,[EBP-4]
	CMP EAX,2
	SETL AL
	AND AL,AL
	JZ L_54
	MOV EAX,[EBP-8]
	MOV ECX,[EBP+16]
	CDQ
	IDIV ECX
	MOV DWORD PTR [EBP-12],EAX
	JMP L_55
L_54:
	XOR EAX,EAX
	MOV DWORD PTR [EBP-12],EAX
L_55:
	MOV EAX,[EBP-12]
	MOV ESP,EBP
	POP EBP
	RETN 16
PUBLIC _fwrite:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,12
	PUSH DWORD PTR [EBP+8]
	PUSH DWORD PTR [EBP+20]
	MOV EAX,[EBP+16]
	MOV ECX,[EBP+12]
	IMUL ECX
	PUSH EAX
	LEA EAX,DWORD PTR [EBP-8]
	PUSH EAX
	CALL FWORD PTR _WriteBytes
	MOV DWORD PTR [EBP-4],EAX
	MOV EAX,[EBP-4]
	AND EAX,EAX
	JNZ L_57
	MOV EAX,[EBP-8]
	MOV ECX,[EBP+16]
	CDQ
	IDIV ECX
	MOV DWORD PTR [EBP-12],EAX
	JMP L_58
L_57:
	MOV EAX,[EBP-4]
	MOV _error_num,EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-12],EAX
L_58:
	MOV EAX,[EBP-12]
	MOV ESP,EBP
	POP EBP
	RETN 16
