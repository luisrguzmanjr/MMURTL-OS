
.DATA


.CODE
EXTRN _iscntrl: NEAR
EXTRN _isspace: NEAR
EXTRN _isdigit: NEAR
EXTRN _isupper: NEAR
EXTRN _islower: NEAR
EXTRN _ispunct: NEAR
EXTRN _isalpha: NEAR
EXTRN _isxdigit: NEAR
EXTRN _isalnum: NEAR
EXTRN _isgraph: NEAR
EXTRN _toupper: NEAR
EXTRN _tolower: NEAR
EXTRN _strcpy: NEAR
EXTRN _strncpy: NEAR
EXTRN _strcat: NEAR
EXTRN _strncat: NEAR
EXTRN _strcmp: NEAR
EXTRN _strncmp: NEAR
EXTRN _strlen: NEAR
EXTRN _strchr: NEAR
EXTRN _fopen: NEAR
EXTRN _fclose: NEAR
EXTRN _remove: NEAR
EXTRN _rename: NEAR
EXTRN _fgetc: NEAR
EXTRN _fgets: NEAR
EXTRN _fputs: NEAR
EXTRN _fputc: NEAR
EXTRN _printf: NEAR
EXTRN _sprintf: NEAR
EXTRN _fprintf: NEAR
EXTRN _ftell: NEAR
EXTRN _rewind: NEAR
EXTRN _fseek: NEAR
EXTRN _fread: NEAR
EXTRN _fwrite: NEAR
EXTRN _printf: NEAR
EXTRN _sprintf: NEAR
EXTRN _fprintf: NEAR
PUBLIC __formatout:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,58
	XOR EAX,EAX
	MOV DWORD PTR [EBP-58],EAX
L_1:
	MOV ESI,DWORD PTR [EBP+12]
	INC DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-41],AL
	AND EAX,EAX
	JZ L_2
	MOVSX EAX,BYTE PTR [EBP-41]
	CMP EAX,37
	SETE AL
	AND AL,AL
	JZ L_3
	MOV ESI,DWORD PTR [EBP+12]
	INC DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-41],AL
	MOV EAX,32
	LEA ESI,BYTE PTR [EBP-33]
	ADD ESI,EAX
	MOV EAX,ESI
	MOV DWORD PTR [EBP-37],EAX
	MOV ESI,DWORD PTR [EBP-37]
	XOR EAX,EAX
	MOV BYTE PTR [EBP-40],AL
	MOV BYTE PTR [EBP-38],AL
	MOV BYTE PTR [ESI],AL
	XOR EAX,EAX
	MOV DWORD PTR [EBP-54],EAX
	MOV DWORD PTR [EBP-50],EAX
	MOV DWORD PTR [EBP-46],EAX
	MOV EAX,32
	MOV BYTE PTR [EBP-39],AL
	MOVSX EAX,BYTE PTR [EBP-41]
	CMP EAX,45
	SETE AL
	AND AL,AL
	JZ L_4
	DEC BYTE PTR [EBP-38]
	MOVSX EAX,BYTE PTR [EBP-38]
	MOV ESI,DWORD PTR [EBP+12]
	INC DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-41],AL
L_4:
	MOVSX EAX,BYTE PTR [EBP-41]
	CMP EAX,48
	SETE AL
	AND AL,AL
	JZ L_5
	MOV EAX,48
	MOV BYTE PTR [EBP-39],AL
L_5:
L_6:
	MOVSX EAX,BYTE PTR [EBP-41]
	PUSH EAX
	CALL _isdigit
	AND EAX,EAX
	JZ L_7
	MOV EAX,[EBP-46]
	MOV ECX,10
	MUL ECX
	MOV EBX,EAX
	MOVSX EAX,BYTE PTR [EBP-41]
	SUB EAX,48
	ADD EAX,EBX
	MOV DWORD PTR [EBP-46],EAX
	MOV ESI,DWORD PTR [EBP+12]
	INC DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-41],AL
	JMP L_6
L_7:
	SUB DWORD PTR [EBP+8],4
	MOV ESI,DWORD PTR [EBP+8]
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP-50],EAX
	MOVSX EAX,BYTE PTR [EBP-41]
	JMP L_9
L_10:
L_11:
	MOV EAX,10
	MOV DWORD PTR [EBP-54],EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-42],AL
	MOV ESI,DWORD PTR [EBP+12]
	INC DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-41],AL
	JMP L_8
L_12:
L_13:
	MOV ESI,DWORD PTR [EBP+12]
	INC DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-41],AL
	JMP L_8
L_14:
	XOR EAX,EAX
	MOV BYTE PTR [EBP-42],AL
	JMP L_8
L_9:
	CMP EAX,76
	JE L_13
	CMP EAX,108
	JE L_12
	CMP EAX,117
	JE L_11
	CMP EAX,85
	JE L_10
	JMP L_14
L_8:
	MOVSX EAX,BYTE PTR [EBP-41]
	JMP L_16
L_17:
	MOV EAX,10
	MOV DWORD PTR [EBP-54],EAX
	MOVSX EAX,BYTE PTR [EBP-42]
	AND EAX,EAX
	JNZ L_18
	MOV EAX,[EBP-50]
	AND EAX,-2147483648
	JZ L_19
	NEG DWORD PTR [EBP-50]
	MOV EAX,[EBP-50]
	INC BYTE PTR [EBP-40]
	MOVSX EAX,BYTE PTR [EBP-40]
L_19:
L_18:
	JMP L_15
L_20:
L_21:
	MOV EAX,16
	MOV DWORD PTR [EBP-54],EAX
	JMP L_15
L_22:
	MOV EAX,8
	MOV DWORD PTR [EBP-54],EAX
	JMP L_15
L_23:
	MOV EAX,2
	MOV DWORD PTR [EBP-54],EAX
	JMP L_15
L_24:
	DEC DWORD PTR [EBP-37]
	MOV ESI,DWORD PTR [EBP-37]
	MOV EAX,[EBP-50]
	MOV BYTE PTR [ESI],AL
	JMP L_15
L_25:
	MOV EAX,[EBP-50]
	MOV DWORD PTR [EBP-37],EAX
	JMP L_15
L_26:
	DEC DWORD PTR [EBP-37]
	MOV ESI,DWORD PTR [EBP-37]
	MOVSX EAX,BYTE PTR [EBP-41]
	MOV BYTE PTR [ESI],AL
	ADD DWORD PTR [EBP+8],4
	MOV EAX,[EBP+8]
	JMP L_15
L_16:
	CMP EAX,115
	JE L_25
	CMP EAX,99
	JE L_24
	CMP EAX,98
	JE L_23
	CMP EAX,111
	JE L_22
	CMP EAX,120
	JE L_21
	CMP EAX,88
	JE L_20
	CMP EAX,100
	JE L_17
	JMP L_26
L_15:
	MOV EAX,[EBP-54]
	AND EAX,EAX
	JZ L_27
L_28:
	MOV EAX,[EBP-50]
	MOV ECX,[EBP-54]
	XOR EDX,EDX
	DIV ECX
	MOV EAX,EDX
	ADD EAX,48
	MOV BYTE PTR [EBP-41],AL
	CMP EAX,57
	SETG AL
	AND AL,AL
	JZ L_31
	MOVSX EAX,BYTE PTR [EBP-41]
	ADD EAX,7
	MOV BYTE PTR [EBP-41],AL
L_31:
	DEC DWORD PTR [EBP-37]
	MOV ESI,DWORD PTR [EBP-37]
	MOVSX EAX,BYTE PTR [EBP-41]
	MOV BYTE PTR [ESI],AL
L_29:
	MOV EAX,[EBP-50]
	MOV ECX,[EBP-54]
	XOR EDX,EDX
	DIV ECX
	MOV DWORD PTR [EBP-50],EAX
	AND EAX,EAX
	JNZ L_28
L_30:
L_27:
	MOVSX EAX,BYTE PTR [EBP-40]
	AND EAX,EAX
	JZ L_32
	MOV ESI,DWORD PTR [EBP+16]
	INC DWORD PTR [EBP+16]
	MOV EAX,45
	MOV BYTE PTR [ESI],AL
	INC DWORD PTR [EBP-58]
	MOV EAX,[EBP-46]
	AND EAX,EAX
	JZ L_33
	DEC DWORD PTR [EBP-46]
	MOV EAX,[EBP-46]
L_33:
L_32:
	MOV EAX,[EBP-46]
	AND EAX,EAX
	JZ L_34
	MOVSX EAX,BYTE PTR [EBP-38]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_34:
	JZ L_35
	PUSH DWORD PTR [EBP-37]
	CALL _strlen
	MOV DWORD PTR [EBP-54],EAX
L_36:
	MOV EAX,[EBP-54]
	CMP EAX,DWORD PTR [EBP-46]
	SETB AL
	AND AL,AL
	JZ L_37
	JMP SHORT L_38
L_39:
	INC DWORD PTR [EBP-54]
	MOV EAX,[EBP-54]
	JMP SHORT L_36
L_38:
	MOV ESI,DWORD PTR [EBP+16]
	INC DWORD PTR [EBP+16]
	MOVSX EAX,BYTE PTR [EBP-39]
	MOV BYTE PTR [ESI],AL
	JMP L_39
L_37:
	INC DWORD PTR [EBP-58]
	MOV EAX,[EBP-58]
L_35:
	XOR EAX,EAX
	MOV DWORD PTR [EBP-54],EAX
	MOV EAX,[EBP-46]
	SUB EAX,1
	MOV DWORD PTR [EBP-50],EAX
L_40:
	MOV ESI,DWORD PTR [EBP-37]
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	JZ L_42
	MOV EAX,[EBP-54]
	CMP EAX,DWORD PTR [EBP-50]
	SETBE AL
	AND AL,AL
L_42:
	JZ L_41
	MOV ESI,DWORD PTR [EBP+16]
	INC DWORD PTR [EBP+16]
	MOV EBX,ESI
	MOV ESI,DWORD PTR [EBP-37]
	INC DWORD PTR [EBP-37]
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBX],AL
	INC DWORD PTR [EBP-58]
	MOV EAX,[EBP-58]
	INC DWORD PTR [EBP-54]
	MOV EAX,[EBP-54]
	JMP L_40
L_41:
	MOV EAX,[EBP-46]
	AND EAX,EAX
	JZ L_43
	MOVSX EAX,BYTE PTR [EBP-38]
L_43:
	AND EAX,EAX
	JZ L_44
L_45:
	MOV EAX,[EBP-54]
	CMP EAX,DWORD PTR [EBP-46]
	SETB AL
	AND AL,AL
	JZ L_46
	MOV ESI,DWORD PTR [EBP+16]
	INC DWORD PTR [EBP+16]
	MOVSX EAX,BYTE PTR [EBP-39]
	MOV BYTE PTR [ESI],AL
	INC DWORD PTR [EBP-58]
	MOV EAX,[EBP-58]
	INC DWORD PTR [EBP-54]
	MOV EAX,[EBP-54]
	JMP L_45
L_46:
L_44:
	JMP L_47
L_3:
	MOV ESI,DWORD PTR [EBP+16]
	INC DWORD PTR [EBP+16]
	MOVSX EAX,BYTE PTR [EBP-41]
	MOV BYTE PTR [ESI],AL
	INC DWORD PTR [EBP-58]
	MOV EAX,[EBP-58]
L_47:
	JMP L_1
L_2:
	MOV ESI,DWORD PTR [EBP+16]
	XOR EAX,EAX
	MOV BYTE PTR [ESI],AL
	MOV EAX,[EBP-58]
L_48:
	MOV ESP,EBP
	POP EBP
	RETN 12
PUBLIC _printf:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,168
	LEA EAX,DWORD PTR [EBP+EDI+8]
	MOV DWORD PTR [EBP-4],EAX
	LEA EAX,DWORD PTR [EBP-168]
	PUSH EAX
	PUSH DWORD PTR [EBP+EDI+8]
	PUSH DWORD PTR [EBP-4]
	CALL __formatout
	MOV DWORD PTR [EBP-8],EAX
	LEA EAX,DWORD PTR [EBP-168]
	PUSH EAX
	PUSH 2
	CALL _fputs
	MOV EAX,[EBP-8]
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _sprintf:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,8
	LEA EAX,DWORD PTR [EBP+EDI+8]
	MOV DWORD PTR [EBP-4],EAX
	PUSH DWORD PTR [EBP+EDI+12]
	PUSH DWORD PTR [EBP+EDI+8]
	PUSH DWORD PTR [EBP-4]
	CALL __formatout
	MOV DWORD PTR [EBP-8],EAX
	MOV EAX,[EBP-8]
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _fprintf:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,168
	LEA EAX,DWORD PTR [EBP+EDI+8]
	MOV DWORD PTR [EBP-4],EAX
	LEA EAX,DWORD PTR [EBP-168]
	PUSH EAX
	PUSH DWORD PTR [EBP+EDI+8]
	PUSH DWORD PTR [EBP-4]
	CALL __formatout
	MOV DWORD PTR [EBP-8],EAX
	LEA EAX,DWORD PTR [EBP-168]
	PUSH EAX
	PUSH DWORD PTR [EBP+EDI+12]
	CALL _fputs
	CMP EAX,-1
	SETE AL
	AND AL,AL
	JZ L_51
	MOV EAX,-1
	MOV DWORD PTR [EBP-8],EAX
L_51:
	MOV EAX,[EBP-8]
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC __formatin:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,23
	SUB DWORD PTR [EBP+8],4
	MOV ESI,DWORD PTR [EBP+8]
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP-16],EAX
	XOR EAX,EAX
	MOV WORD PTR [EBP-2],AX
L_53:
	MOV ESI,DWORD PTR [EBP-16]
	INC DWORD PTR [EBP-16]
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-21],AL
	AND EAX,EAX
	JZ L_54
	MOVSX EAX,BYTE PTR [EBP-21]
	PUSH EAX
	CALL _isspace
	AND EAX,EAX
	JZ L_55
	JMP L_53
L_55:
L_56:
	MOV ESI,DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL _isspace
	AND EAX,EAX
	JZ L_57
	INC DWORD PTR [EBP+12]
	MOV EAX,[EBP+12]
	JMP L_56
L_57:
	MOVSX EAX,BYTE PTR [EBP-21]
	CMP EAX,37
	SETNE AL
	AND AL,AL
	JZ L_58
	MOV ESI,DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [ESI]
	CMP AL,BYTE PTR [EBP-21]
	SETE AL
	AND AL,AL
	JZ L_59
	INC DWORD PTR [EBP+12]
	MOV EAX,[EBP+12]
L_59:
	JMP L_53
L_58:
	SUB DWORD PTR [EBP+8],4
	MOV ESI,DWORD PTR [EBP+8]
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP-20],EAX
	MOV DWORD PTR [EBP-12],EAX
	XOR EAX,EAX
	MOV WORD PTR [EBP-6],AX
	MOV WORD PTR [EBP-4],AX
	MOV WORD PTR [EBP-8],AX
	MOV BYTE PTR [EBP-22],AL
	MOV BYTE PTR [EBP-23],AL
L_60:
	MOV ESI,DWORD PTR [EBP-16]
	INC DWORD PTR [EBP-16]
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-21],AL
	PUSH EAX
	CALL _isdigit
	AND EAX,EAX
	JZ L_61
	MOVZX EAX,WORD PTR [EBP-4]
	MOV ECX,10
	MUL ECX
	MOV EBX,EAX
	MOVSX EAX,BYTE PTR [EBP-21]
	SUB EAX,48
	ADD EAX,EBX
	MOV WORD PTR [EBP-4],AX
	JMP L_60
L_61:
	MOVSX EAX,BYTE PTR [EBP-21]
	JMP L_63
L_64:
	MOVZX EAX,WORD PTR [EBP-4]
	AND EAX,EAX
	JNZ L_65
	MOV EAX,1
	MOV WORD PTR [EBP-4],AX
L_65:
	MOV EAX,1
	MOV BYTE PTR [EBP-23],AL
L_66:
	MOV ESI,DWORD PTR [EBP-20]
	INC DWORD PTR [EBP-20]
	MOV EBX,ESI
	MOV ESI,DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBX],AL
	AND EAX,EAX
	JZ L_69
	INC DWORD PTR [EBP+12]
	MOV EAX,[EBP+12]
	JMP L_70
L_69:
	XOR EAX,EAX
	MOV BYTE PTR [EBP-23],AL
	JMP L_68
L_70:
L_67:
	DEC WORD PTR [EBP-4]
	MOVZX EAX,WORD PTR [EBP-4]
	AND EAX,EAX
	JNZ L_66
L_68:
	JMP L_62
L_71:
	MOVZX EAX,WORD PTR [EBP-4]
	AND EAX,EAX
	JNZ L_72
	MOV EAX,-1
	MOV WORD PTR [EBP-4],AX
L_72:
L_73:
	MOV ESI,DWORD PTR [EBP-20]
	INC DWORD PTR [EBP-20]
	MOV EBX,ESI
	MOV ESI,DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-21],AL
	MOV BYTE PTR [EBX],AL
	AND EAX,EAX
	JZ L_76
	INC DWORD PTR [EBP+12]
	MOV EAX,1
	MOV BYTE PTR [EBP-23],AL
	JMP L_77
L_76:
	JMP L_75
L_77:
L_74:
	MOVSX EAX,BYTE PTR [EBP-21]
	PUSH EAX
	CALL _isspace
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_78
	MOVZX EAX,WORD PTR [EBP-4]
	DEC WORD PTR [EBP-4]
L_78:
	AND EAX,EAX
	JNZ L_73
L_75:
	DEC DWORD PTR [EBP+12]
	MOV EAX,[EBP-20]
	SUB EAX,1
	MOV ESI,EAX ;IndexPtr
	XOR EAX,EAX
	MOV BYTE PTR [ESI],AL
	JMP L_62
L_79:
	MOV ESI,DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,45
	SETE AL
	AND AL,AL
	JZ L_80
	INC DWORD PTR [EBP+12]
	MOV EAX,-1
	MOV BYTE PTR [EBP-22],AL
L_80:
L_81:
L_82:
	MOV EAX,10
	MOV WORD PTR [EBP-8],AX
	JMP L_62
L_83:
	MOV EAX,2
	MOV WORD PTR [EBP-8],AX
	JMP L_62
L_84:
	MOV EAX,8
	MOV WORD PTR [EBP-8],AX
	JMP L_62
L_85:
	MOV EAX,16
	MOV WORD PTR [EBP-8],AX
	JMP L_62
L_86:
	MOV ESI,DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,37
	SETE AL
	AND AL,AL
	JZ L_87
	INC DWORD PTR [EBP+12]
	MOV EAX,[EBP+12]
L_87:
	JMP L_62
L_88:
	XOR EAX,EAX
	JMP L_89
L_63:
	CMP EAX,37
	JE L_86
	CMP EAX,120
	JE L_85
	CMP EAX,111
	JE L_84
	CMP EAX,98
	JE L_83
	CMP EAX,85
	JE L_82
	CMP EAX,117
	JE L_81
	CMP EAX,100
	JE L_79
	CMP EAX,115
	JE L_71
	CMP EAX,99
	JE L_64
	JMP L_88
L_62:
	MOVZX EAX,WORD PTR [EBP-8]
	AND EAX,EAX
	JZ L_90
L_91:
	MOV ESI,DWORD PTR [EBP+12]
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-21],AL
	PUSH EAX
	CALL _isdigit
	AND EAX,EAX
	JZ L_94
	MOVSX EAX,BYTE PTR [EBP-21]
	SUB EAX,48
	MOV BYTE PTR [EBP-21],AL
	JMP L_95
L_94:
	MOVSX EAX,BYTE PTR [EBP-21]
	CMP EAX,97
	SETGE AL
	AND AL,AL
	JZ L_96
	MOVSX EAX,BYTE PTR [EBP-21]
	SUB EAX,87
	MOV BYTE PTR [EBP-21],AL
	JMP L_97
L_96:
	MOVSX EAX,BYTE PTR [EBP-21]
	CMP EAX,65
	SETGE AL
	AND AL,AL
	JZ L_98
	MOVSX EAX,BYTE PTR [EBP-21]
	SUB EAX,55
	MOV BYTE PTR [EBP-21],AL
	JMP L_99
L_98:
	JMP L_93
L_99:
L_97:
L_95:
	MOVSX EAX,BYTE PTR [EBP-21]
	MOVZX ECX,WORD PTR [EBP-8]
	CMP EAX,ECX
	SETAE AL
	AND AL,AL
	JZ L_100
	JMP L_93
L_100:
	MOVZX EAX,WORD PTR [EBP-6]
	MOVZX ECX,WORD PTR [EBP-8]
	MUL ECX
	MOVSX ECX,BYTE PTR [EBP-21]
	ADD EAX,ECX
	MOV WORD PTR [EBP-6],AX
	MOV EAX,1
	MOV BYTE PTR [EBP-23],AL
	INC DWORD PTR [EBP+12]
	MOV EAX,[EBP+12]
L_92:
	DEC WORD PTR [EBP-4]
	MOVZX EAX,WORD PTR [EBP-4]
	AND EAX,EAX
	JNZ L_91
L_93:
	MOV ESI,DWORD PTR [EBP-12]
	MOV EBX,ESI
	MOVSX EAX,BYTE PTR [EBP-22]
	AND EAX,EAX
	JZ SHORT L_102
	NEG WORD PTR [EBP-6]
	MOVZX EAX,WORD PTR [EBP-6]
	JMP SHORT L_101
L_102:
	MOVZX EAX,WORD PTR [EBP-6]
L_101:
	MOV WORD PTR [EBX],AX
L_90:
	MOVZX EAX,WORD PTR [EBP-2]
	MOVSX ECX,BYTE PTR [EBP-23]
	ADD EAX,ECX
	MOV WORD PTR [EBP-2],AX
	JMP L_53
L_54:
	MOVZX EAX,WORD PTR [EBP-2]
L_89:
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _scanf:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,168
	LEA EAX,DWORD PTR [EBP+EDI+8]
	MOV DWORD PTR [EBP-4],EAX
	LEA EAX,DWORD PTR [EBP-168]
	PUSH EAX
	PUSH 160
	PUSH 1
	CALL _fgets
	AND EAX,EAX
	JNZ L_103
	MOV EAX,-1
	MOV DWORD PTR [EBP-8],EAX
L_103:
	LEA EAX,DWORD PTR [EBP-168]
	PUSH EAX
	PUSH DWORD PTR [EBP-4]
	CALL __formatin
	MOV DWORD PTR [EBP-8],EAX
	MOV EAX,[EBP-8]
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _fscanf:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,168
	LEA EAX,DWORD PTR [EBP+EDI+8]
	MOV DWORD PTR [EBP-4],EAX
	LEA EAX,DWORD PTR [EBP-168]
	PUSH EAX
	PUSH 160
	PUSH DWORD PTR [EBP+EDI+12]
	CALL _fgets
	AND EAX,EAX
	JNZ L_105
	MOV EAX,-1
	MOV DWORD PTR [EBP-8],EAX
L_105:
	LEA EAX,DWORD PTR [EBP-168]
	PUSH EAX
	PUSH DWORD PTR [EBP-4]
	CALL __formatin
	MOV DWORD PTR [EBP-8],EAX
	MOV EAX,[EBP-8]
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _sscanf:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,8
	LEA EAX,DWORD PTR [EBP+EDI+8]
	MOV DWORD PTR [EBP-4],EAX
	PUSH DWORD PTR [EBP+EDI+12]
	PUSH DWORD PTR [EBP-4]
	CALL __formatin
	MOV DWORD PTR [EBP-8],EAX
	MOV EAX,[EBP-8]
	MOV ESP,EBP
	POP EBP
	RETN
