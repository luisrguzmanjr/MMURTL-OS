
.DATA
EXTRN _ExitJob FWORD
EXTRN _GetCmdLine FWORD


.CODE
EXTRN _iscntrl: NEAR
EXTRN _isspace: NEAR
EXTRN _isdigit: NEAR
EXTRN _isupper: NEAR
EXTRN _islower: NEAR
EXTRN _ispunct: NEAR
EXTRN _isalpha: NEAR
EXTRN _isxdigit: NEAR
EXTRN _isalnum: NEAR
EXTRN _isgraph: NEAR
EXTRN _toupper: NEAR
EXTRN _tolower: NEAR
EXTRN _main: NEAR
PUBLIC _exit:
	PUSH EBP
	MOV EBP,ESP
	PUSH DWORD PTR [EBP+8]
	CALL FWORD PTR _ExitJob
	POP EBP
	RETN 4
PUBLIC _stdentry:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,201
	XOR EAX,EAX
	MOV DWORD PTR [EBP-96],EAX
	XOR EAX,EAX
	MOV BYTE PTR [EBP-201],AL
	XOR EAX,EAX
	MOV DWORD PTR [EBP-200],EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-12],EAX
L_1:
	MOV EAX,[EBP-12]
	CMP EAX,80
	SETL AL
	AND AL,AL
	JZ L_2
	JMP SHORT L_3
L_4:
	MOV EAX,[EBP-12]
	INC DWORD PTR [EBP-12]
	JMP SHORT L_1
L_3:
	MOV EAX,[EBP-12]
	LEA ESI,BYTE PTR [EBP-92]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI],AL
	JMP L_4
L_2:
	XOR EAX,EAX
	MOV DWORD PTR [EBP-12],EAX
L_5:
	MOV EAX,[EBP-12]
	CMP EAX,25
	SETL AL
	AND AL,AL
	JZ L_6
	JMP SHORT L_7
L_8:
	MOV EAX,[EBP-12]
	INC DWORD PTR [EBP-12]
	JMP SHORT L_5
L_7:
	MOV EAX,[EBP-12]
	SHL EAX,2
	LEA ESI,DWORD PTR [EBP-196]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV DWORD PTR [ESI],EAX
	JMP L_8
L_6:
	LEA EAX,DWORD PTR [EBP-92]
	PUSH EAX
	LEA EAX,DWORD PTR [EBP-96]
	PUSH EAX
	CALL FWORD PTR _GetCmdLine
	XOR EAX,EAX
	MOV DWORD PTR [EBP-4],EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-8],EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-12],EAX
L_9:
	MOV EAX,[EBP-12]
	CMP EAX,DWORD PTR [EBP-96]
	SETL AL
	AND AL,AL
	JZ L_10
	JMP SHORT L_11
L_12:
	MOV EAX,[EBP-12]
	INC DWORD PTR [EBP-12]
	JMP SHORT L_9
L_11:
	MOV EAX,[EBP-12]
	LEA ESI,BYTE PTR [EBP-92]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,34
	SETE AL
	AND AL,AL
	JZ L_13
	MOVSX EAX,BYTE PTR [EBP-201]
	AND EAX,EAX
	JZ L_14
	XOR EAX,EAX
	MOV BYTE PTR [EBP-201],AL
	JMP L_15
L_14:
	MOV EAX,1
	MOV BYTE PTR [EBP-201],AL
L_15:
	MOV EAX,[EBP-12]
	LEA ESI,BYTE PTR [EBP-92]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI],AL
	JMP L_12
L_13:
	MOV EAX,[EBP-12]
	LEA ESI,BYTE PTR [EBP-92]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL _isspace
	AND EAX,EAX
	JZ L_16
	MOVSX EAX,BYTE PTR [EBP-201]
	AND EAX,EAX
	JZ L_17
	JMP L_12
L_17:
	MOV EAX,[EBP-12]
	LEA ESI,BYTE PTR [EBP-92]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI],AL
	XOR EAX,EAX
	MOV DWORD PTR [EBP-8],EAX
L_16:
	MOV EAX,[EBP-12]
	LEA ESI,BYTE PTR [EBP-92]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	JZ L_18
	MOV EAX,[EBP-8]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_18:
	JZ L_19
	MOV EAX,[EBP-4]
	INC DWORD PTR [EBP-4]
	SHL EAX,2
	LEA ESI,DWORD PTR [EBP-196]
	ADD ESI,EAX
	MOV EBX,ESI
	LEA EAX,DWORD PTR [EBP-92]
	ADD EAX,DWORD PTR [EBP-12]
	MOV DWORD PTR [EBX],EAX
	MOV EAX,[EBP-200]
	INC DWORD PTR [EBP-200]
	MOV EAX,1
	MOV DWORD PTR [EBP-8],EAX
L_19:
	JMP L_12
L_10:
	PUSH DWORD PTR [EBP-200]
	LEA EAX,DWORD PTR [EBP-196]
	PUSH EAX
	CALL _main
	XOR EAX,EAX
	PUSH EAX
	CALL _exit
	MOV ESP,EBP
	POP EBP
	RETN
